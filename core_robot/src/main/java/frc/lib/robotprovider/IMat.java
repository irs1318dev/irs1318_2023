package frc.lib.robotprovider;

public interface IMat
{
    IMat adjustROI(int dtop, int dbottom, int dleft, int dright);
    void assignTo(IMat m, int type);
    void assignTo(IMat m);
    int channels();
    int checkVector(int elemChannels, int depth, boolean requireContinuous);
    int checkVector(int elemChannels, int depth);
    int checkVector(int elemChannels);
    IMat clone();
    IMat col(int x);
    IMat colRange(int startcol, int endcol);
    IMat colRange(IRange r);
    int dims();
    int cols();
    void convertTo(IMat m, int rtype, double alpha, double beta);
    void convertTo(IMat m, int rtype, double alpha);
    void convertTo(IMat m, int rtype);
    void copyTo(IMat m);
    void copyTo(IMat m, IMat mask);
    void create(int rows, int cols, int type);
    void create(ISize size, int type);
    IMat cross(IMat m);
    long dataAddr();
    int depth();
    IMat diag(int d);
    IMat diag();
    double dot(IMat m);
    long elemSize();
    long elemSize1();
    boolean empty();
    IMat inv(int method);
    IMat inv();
    boolean isContinuous();
    boolean isSubmatrix();
    void locateROI(ISize wholeSize, IPoint ofs);
    IMat mul(IMat m, double scale);
    IMat mul(IMat m);
    void push_back(IMat m);
    void release();
    IMat reshape(int cn, int rows);
    IMat reshape(int cn);
    IMat row(int y);
    IMat rowRange(int startrow, int endrow);
    IMat rowRange(IRange r);
    int rows();
    IMat setTo(IScalar s);
    IMat setTo(IScalar value, IMat mask);
    IMat setTo(IMat value, IMat mask);
    IMat setTo(IMat value);
    ISize size();
    long step1(int i);
    long step1();
    IMat submat(int rowStart, int rowEnd, int colStart, int colEnd);
    IMat submat(IRange rowRange, IRange colRange);
    IMat submat(IRect roi);
    IMat t();
    long total();
    int type();
    String dump();
    int put(int row, int col, double... data);
    int put(int row, int col, float[] data);
    int put(int row, int col, int[] data);
    int put(int row, int col, short[] data);
    int put(int row, int col, byte[] data);
    int get(int row, int col, byte[] data);
    int get(int row, int col, short[] data);
    int get(int row, int col, int[] data);
    int get(int row, int col, float[] data);
    int get(int row, int col, double[] data);
    double[] get(int row, int col);
    int height();
    int width();
}